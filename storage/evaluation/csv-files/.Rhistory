data <- read.csv(multipleValues[1], header=TRUE)
map_size_10 <- data[data[,1] == 10,]
calculation <- do.call(rbind, lapply(split(map_size_10, map_size_10$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
map_size_100 <- data[data[,1] == 100,]
map_size_1000 <- data[data[,1] == 1000,]
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10, mapping = aes(as.character(value_mpt_depth), median(used_gas)/1.0e+6, color = as.character(map_size)))
#  geom_line(data = calculation[calculation[,4]==10,], mapping = aes(as.character(value_depth), md/1.0e+6, color = as.character(map_size))) +
#  geom_line(data = calculation[calculation[,4]==10,], mapping = aes(as.character(value_depth), md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'Map Sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10, mapping = aes(as.character(value_mpt_depth), median(used_gas), color = as.character(map_size)))
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10, mapping = aes(as.character(value_mpt_depth), median(used_gas), color = as.character(map_size)))
#  geom_line(data = calculation[calculation[,4]==10,], mapping = aes(as.character(value_depth), md/1.0e+6, color = as.character(map_size))) +
#  geom_line(data = calculation[calculation[,4]==10,], mapping = aes(as.character(value_depth), md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'Map Sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10, mapping = aes(value_mpt_depth, median(used_gas), color = as.character(map_size)))
#  geom_line(data = calculation[calculation[,4]==10,], mapping = aes(as.character(value_depth), md/1.0e+6, color = as.character(map_size))) +
#  geom_line(data = calculation[calculation[,4]==10,], mapping = aes(as.character(value_depth), md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'Map Sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10, mapping = aes(value_mpt_depth, median(used_gas), color = as.character(map_size))) +
geom_line(data = calculation[calculation[,4]==10,], mapping = aes(as.character(value_depth), md/1.0e+6, color = as.character(map_size))) +
geom_line(data = calculation[calculation[,4]==10,], mapping = aes(as.character(value_depth), md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'Map Sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10, mapping = aes(value_mpt_depth, median(used_gas), color = as.character(map_size))) +
geom_line(data = calculation[calculation[,4]==10,], mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = calculation[calculation[,4]==10,], mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'Map Sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = calculation[calculation[,4]==10,], mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = calculation[calculation[,4]==10,], mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = calculation[calculation[,4]==10,], mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'Map Sizes')
multipleValues <- list.files(pattern = "+measurements-update-one-value-with-map-sizes-1-to-1000.csv")
data <- read.csv(multipleValues[1], header=TRUE)
map_size_10 <- data[data[,1] == 10,]
map_size_10_calc <- do.call(rbind, lapply(split(map_size_10, map_size_10$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
map_size_100 <- data[data[,1] == 100,]
map_size_100_calc <- do.call(rbind, lapply(split(map_size_100, map_size_100$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
map_size_1000 <- data[data[,1] == 1000,]
map_size_1000_calc <- do.call(rbind, lapply(split(map_size_1000, map_size_1000$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'Map Sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6)) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'Map Sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'Map Sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(ymin=(md/1.0e+6)-sd, ymax=(md/1.0e+6)+sd), width=0.2)+
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, ymin=(md/1.0e+6)-sd, ymax=(md/1.0e+6)+sd), width=0.2)+
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=(md/1.0e+6)-sd, ymax=(md/1.0e+6)+sd), width=0.2) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-sd), ymax=((md/1.0e+6)+sd)), width=0.2) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
multipleValues <- list.files(pattern = "+measurements-update-one-value-with-map-sizes-1-to-1000.csv")
data <- read.csv(multipleValues[1], header=TRUE)
map_size_10 <- data[data[,1] == 10,]
map_size_10_calc <- do.call(rbind, lapply(split(map_size_10, map_size_10$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
map_size_100 <- data[data[,1] == 100,]
map_size_100_calc <- do.call(rbind, lapply(split(map_size_100, map_size_100$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
map_size_1000 <- data[data[,1] == 1000,]
map_size_1000_calc <- do.call(rbind, lapply(split(map_size_1000, map_size_1000$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-sd), ymax=((md/1.0e+6)+sd)), width=0.2) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(map_size_10_calc, aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-sd), ymax=((md/1.0e+6)+sd)), width=0.2) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
#  geom_errorbar(map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-sd), ymax=((md/1.0e+6)+sd)), width=0.2) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
map_size_10_calc
((map_size_10_calc$md/1.0e+6)-map_size_10_calc$sd)
(map_size_10_calc$md/1.0e+6)
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6))), width=0.2) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2)) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, shape = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, shape = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, shape = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size)))
install.packages("tidyverse")
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, linetype = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, linetype = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, linetype = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size)))
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, line = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, line = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, line = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size)))
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6), line_type = as.character(map_size)) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6), line_type = as.character(map_size_10_calc$map_size)) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size)))
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6), linetype = as.character(map_size_10_calc$map_size)) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6), linetype = map_size_10_calc$map_size) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6), linetype = map_size_10_calc$map_size) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, shape = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# das hier noch in eine range umwandeln
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size)))
createdPlot +
labs(color = 'storage sizes')
# auch nochmal als line probieren (median)
createdPlot <- ggplot() +
geom_point(data = map_size_10, mapping = aes(value_mpt_depth, used_gas/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100, mapping = aes(value_mpt_depth, used_gas/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000, mapping = aes(value_mpt_depth, used_gas/1.0e+6, color = as.character(map_size)))
createdPlot
install.packages("tidyverse")
# auch nochmal als line probieren (median)
createdPlot <- ggplot() +
geom_jitter(data = map_size_10, mapping = aes(value_mpt_depth, used_gas/1.0e+6, color = as.character(map_size))) +
geom_jitter(data = map_size_100, mapping = aes(value_mpt_depth, used_gas/1.0e+6, color = as.character(map_size))) +
geom_jitter(data = map_size_1000, mapping = aes(value_mpt_depth, used_gas/1.0e+6, color = as.character(map_size)))
createdPlot
# 1. Multiple Values
multipleValues <- list.files(pattern = "+multiple-values-with-map-sizes-1-to-1000.csv")
data <- read.csv(multipleValues[1], header=TRUE)
map_size_10 <- data[data[,1] == 10,]
map_size_100 <- data[data[,1] == 100,]
map_size_1000 <- data[data[,1] == 1000,]
createdPlot <- ggplot() +
geom_line(data = map_size_10, mapping = aes(changed_value_count, used_gas/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_100, mapping = aes(changed_value_count, used_gas/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000, mapping = aes(changed_value_count, used_gas/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'Map Sizes')
createdPlot <- ggplot() +
geom_line(data = map_size_10, mapping = aes(changed_value_count, used_gas/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_100, mapping = aes(changed_value_count, used_gas/1.0e+6, color = as.character(map_size))) +
geom_line(data = map_size_1000, mapping = aes(changed_value_count, used_gas/1.0e+6, color = as.character(map_size)))
createdPlot +
labs(color = 'Map Sizes')+
xlab('#values') +
ylab('Gas used (Million)')
createdPlot +
labs(color = 'Map Sizes')+
ggtitle('Gas cost for updating multiple storage values') +
xlab('#values') +
ylab('Gas used (Million)')
createdPlot +
labs(color = 'Storage size')+
ggtitle('Gas cost for updating multiple storage values') +
xlab('#values') +
ylab('Gas used (Million)')
# 2. Individual Values
multipleValues <- list.files(pattern = "+measurements-update-one-value-with-map-sizes-1-to-1000.csv")
data <- read.csv(multipleValues[1], header=TRUE)
map_size_10 <- data[data[,1] == 10,]
map_size_10_calc <- do.call(rbind, lapply(split(map_size_10, map_size_10$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
map_size_100 <- data[data[,1] == 100,]
map_size_100_calc <- do.call(rbind, lapply(split(map_size_100, map_size_100$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
map_size_1000 <- data[data[,1] == 1000,]
map_size_1000_calc <- do.call(rbind, lapply(split(map_size_1000, map_size_1000$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
# median + standard deviation
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/1.0e+6, ymin=((md/1.0e+6)-(sd/1.0e+6)), ymax=((md/1.0e+6)+(sd/1.0e+6)), width=0.2, color = as.character(map_size)))
createdPlot +
labs(color = 'Storage size')
# median + standard deviation
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size)))
createdPlot +
labs(color = 'Storage size') +
ggtitle('Gas cost for updating single storage values') +
xlab('Storage value height in merkle tree') +
ylab('Gas used (Million)')
scale_individual_values <- 1e3
scale_multiple_values <- 1e6
# median + standard deviation
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size)))
createdPlot +
labs(color = 'Storage size') +
ggtitle('Gas cost for updating single storage values') +
xlab('Storage value height in merkle tree') +
ylab('Gas used (Million)')
# 1. Multiple Values
multipleValues <- list.files(pattern = "+multiple-values-with-map-sizes-1-to-1000.csv")
data <- read.csv(multipleValues[1], header=TRUE)
map_size_10 <- data[data[,1] == 10,]
map_size_100 <- data[data[,1] == 100,]
map_size_1000 <- data[data[,1] == 1000,]
createdPlot <- ggplot() +
geom_line(data = map_size_10, mapping = aes(changed_value_count, used_gas/scale_multiple_values, color = as.character(map_size))) +
geom_line(data = map_size_100, mapping = aes(changed_value_count, used_gas/scale_multiple_values, color = as.character(map_size))) +
geom_line(data = map_size_1000, mapping = aes(changed_value_count, used_gas/scale_multiple_values, color = as.character(map_size)))
createdPlot +
labs(color = 'Storage size')+
ggtitle('Gas cost for updating multiple storage values') +
xlab('#values') +
ylab('Gas used (Million)')
# 2. Individual Values
multipleValues <- list.files(pattern = "+measurements-update-one-value-with-map-sizes-1-to-1000.csv")
data <- read.csv(multipleValues[1], header=TRUE)
map_size_10 <- data[data[,1] == 10,]
map_size_10_calc <- do.call(rbind, lapply(split(map_size_10, map_size_10$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
map_size_100 <- data[data[,1] == 100,]
map_size_100_calc <- do.call(rbind, lapply(split(map_size_100, map_size_100$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
map_size_1000 <- data[data[,1] == 1000,]
map_size_1000_calc <- do.call(rbind, lapply(split(map_size_1000, map_size_1000$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
# median + standard deviation
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size)))
createdPlot +
labs(color = 'Storage size') +
ggtitle('Gas cost for updating single storage values') +
xlab('Storage value height in merkle tree') +
ylab('Gas used (Thousand)')
# 2. Individual Values
multipleValues <- list.files(pattern = "+measurements-update-one-value-with-map-sizes-1-to-1000.csv")
data <- read.csv(multipleValues[1], header=TRUE)
map_size_10 <- data[data[,1] == 10,]
map_size_10_calc <- do.call(rbind, lapply(split(map_size_10, map_size_10$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
map_size_100 <- data[data[,1] == 100,]
map_size_100_calc <- do.call(rbind, lapply(split(map_size_100, map_size_100$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
map_size_1000 <- data[data[,1] == 1000,]
map_size_1000_calc <- do.call(rbind, lapply(split(map_size_1000, map_size_1000$value_mpt_depth), function(d) { data.frame(md=median(d$used_gas), sd=sd(d$used_gas), value_depth=d$value_mpt_depth, map_size=d$map_size)}))
# median + standard deviation
createdPlot <- ggplot() +
geom_line(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_errorbar(data = map_size_10_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_errorbar(data = map_size_100_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size))) +
geom_line(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, color = as.character(map_size)))+
geom_errorbar(data = map_size_1000_calc, mapping = aes(value_depth, md/scale_individual_values, ymin=((md/scale_individual_values)-(sd/scale_individual_values)), ymax=((md/scale_individual_values)+(sd/scale_individual_values)), width=0.2, color = as.character(map_size)))
createdPlot +
labs(color = 'Storage size') +
ggtitle('Gas cost for updating single storage values') +
xlab('Storage value height in merkle tree') +
ylab('Gas used (Thousand)')
# indiviadual points
createdPlot <- ggplot() +
geom_point(data = map_size_10, mapping = aes(value_mpt_depth, used_gas/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_100, mapping = aes(value_mpt_depth, used_gas/scale_individual_values, color = as.character(map_size))) +
geom_point(data = map_size_1000, mapping = aes(value_mpt_depth, used_gas/scale_individual_values, color = as.character(map_size)))
createdPlot
createdPlot +
labs(color = 'Storage size') +
ggtitle('Gas cost for updating single storage values') +
xlab('Storage value height in merkle tree') +
ylab('Gas used (Thousand)')
# indiviadual points
createdPlot <- ggplot() +
geom_jitter(data = map_size_10, mapping = aes(value_mpt_depth, used_gas/scale_individual_values, color = as.character(map_size))) +
geom_jitter(data = map_size_100, mapping = aes(value_mpt_depth, used_gas/scale_individual_values, color = as.character(map_size))) +
geom_jitter(data = map_size_1000, mapping = aes(value_mpt_depth, used_gas/scale_individual_values, color = as.character(map_size)))
createdPlot +
labs(color = 'Storage size') +
ggtitle('Gas cost for updating single storage values') +
xlab('Storage value height in merkle tree') +
ylab('Gas used (Thousand)')
View(df)
